{"ast":null,"code":"var _jsxFileName = \"/Users/annzhu/Documents/Software Studio/EnvironmentData/src/components/ImagePlot.js\",\n  _s = $RefreshSig$();\nimport styles from \"./ImagePlot.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst ImagePlot = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/NavSous/Software-Studio-Project/data/co2.csv').then(response => response.text()).then(data => {\n      let xs = [];\n      let ys = [];\n      data.split(\"\\n\").slice(1, -1).forEach(point => {\n        let parsed = point.split(\",\").map(y => {\n          return parseFloat(y);\n        });\n      });\n      console.log(xs, ys);\n      setData({\n        labels: Array.from(datapoints.length).map(i => i),\n        datasets: [{\n          label: \"whee\",\n          data: datapoints\n        }]\n      });\n    }).catch(err => console.error(err));\n  }, []);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Line Chart'\n      }\n    }\n  };\n  return data && /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 18\n  }, this);\n  // <img className={styles.image1Icon} alt=\"\" src=\"https://github.com/NavSous/Software-Studio-Project/blob/data/images/co2_30.png?raw=true\" />;\n\n  // <div> asdfkajsdlkfjalksjdfkljasdf </div>\n  // return (data != null)? <div> hii </div> : <div> no data </div>\n};\n_s(ImagePlot, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = ImagePlot;\nexport default ImagePlot;\nvar _c;\n$RefreshReg$(_c, \"ImagePlot\");","map":{"version":3,"names":["styles","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","ImagePlot","data","setData","fetch","then","response","text","xs","ys","split","slice","forEach","point","parsed","map","y","parseFloat","console","log","labels","Array","from","datapoints","length","i","datasets","label","catch","err","error","options","responsive","plugins","legend","position","title","display"],"sources":["/Users/annzhu/Documents/Software Studio/EnvironmentData/src/components/ImagePlot.js"],"sourcesContent":["import styles from \"./ImagePlot.module.css\";\nimport { useEffect, useState } from \"react\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n\nconst ImagePlot = () => {\n  const [data, setData] = useState(null)\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/NavSous/Software-Studio-Project/data/co2.csv')\n      .then(response => response.text())\n      .then(data => {\n        let xs = []\n        let ys = []\n        data.split(\"\\n\").slice(1, -1).forEach(point => {\n          let parsed = point.split(\",\").map(y => {\n            return parseFloat(y);\n          });\n\n\n        })\n        console.log(xs, ys)\n        setData({\n            labels: Array.from(datapoints.length).map(i => i),\n            datasets: [{\n            label: \"whee\",\n            data: datapoints,\n            }]\n        })\n\n      })\n      .catch(err => console.error(err));\n  },[])\n\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Line Chart',\n      },\n    },\n  };\n\n\n\n  return data && <Line options={options} data={data} /> \n  // <img className={styles.image1Icon} alt=\"\" src=\"https://github.com/NavSous/Software-Studio-Project/blob/data/images/co2_30.png?raw=true\" />;\n\n  // <div> asdfkajsdlkfjalksjdfkljasdf </div>\n  // return (data != null)? <div> hii </div> : <div> no data </div>\n  \n  \n};\n\nexport default ImagePlot;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC;AAEvCR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AAGD,MAAMG,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtCD,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,gFAAgF,CAAC,CACpFC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACH,IAAI,IAAI;MACZ,IAAIM,EAAE,GAAG,EAAE;MACX,IAAIC,EAAE,GAAG,EAAE;MACXP,IAAI,CAACQ,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAI;QAC7C,IAAIC,MAAM,GAAGD,KAAK,CAACH,KAAK,CAAC,GAAG,CAAC,CAACK,GAAG,CAACC,CAAC,IAAI;UACrC,OAAOC,UAAU,CAACD,CAAC,CAAC;QACtB,CAAC,CAAC;MAGJ,CAAC,CAAC;MACFE,OAAO,CAACC,GAAG,CAACX,EAAE,EAAEC,EAAE,CAAC;MACnBN,OAAO,CAAC;QACJiB,MAAM,EAAEC,KAAK,CAACC,IAAI,CAACC,UAAU,CAACC,MAAM,CAAC,CAACT,GAAG,CAACU,CAAC,IAAIA,CAAC,CAAC;QACjDC,QAAQ,EAAE,CAAC;UACXC,KAAK,EAAE,MAAM;UACbzB,IAAI,EAAEqB;QACN,CAAC;MACL,CAAC,CAAC;IAEJ,CAAC,CAAC,CACDK,KAAK,CAACC,GAAG,IAAIX,OAAO,CAACY,KAAK,CAACD,GAAG,CAAC,CAAC;EACrC,CAAC,EAAC,EAAE,CAAC;EAGL,MAAME,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACb9B,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAID,OAAOL,IAAI,iBAAI,QAAC,IAAI;IAAC,OAAO,EAAE6B,OAAQ;IAAC,IAAI,EAAE7B;EAAK;IAAA;IAAA;IAAA;EAAA,QAAG;EACrD;;EAEA;EACA;AAGF,CAAC;AAAC,GAnDID,SAAS;AAAA,KAATA,SAAS;AAqDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}