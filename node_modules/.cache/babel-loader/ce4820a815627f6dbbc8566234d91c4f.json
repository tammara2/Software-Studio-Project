{"ast":null,"code":"var _jsxFileName = \"/Users/annzhu/Documents/Software Studio/EnvironmentData/src/components/ImagePlot.js\",\n  _s = $RefreshSig$();\nimport styles from \"./ImagePlot.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst ImagePlot = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/NavSous/Software-Studio-Project/data/co2.csv').then(response => response.text()).then(data => {\n      let datapoints = data.split(\"\\n\").slice(1, -1).map(point => {\n        return parseFloat(point.split(\",\")[1]);\n        // let parsed = point.split(\",\").map(y => {\n        //   return parseFloat(y);\n        // });\n      });\n\n      console.log(datapoints);\n      setData({\n        // labels: Array.from(datapoints.length).map(i => i),\n        labels: [...Array(datapoints.length).keys()].map(day => {\n          var date = new Date();\n          var dd = String(date.getDate()).padStart(2, '0');\n          var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n          var yyyy = date.getFullYear();\n          date = mm + '/' + dd + '/' + yyyy;\n          return day;\n        }),\n        datasets: [{\n          label: \"\",\n          data: datapoints\n        }]\n      });\n    }).catch(err => console.error(err));\n  }, []);\n  const options = {\n    responsive: true,\n    // layout: {\n    //   padding: {\n    //     top: 400,\n    //     bottom: 0,\n    //     left: 200,\n    //     right: 200\n    //   }\n    // },\n    plugins: {\n      legend: {\n        // position: 'top',\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Bay Meadows Daily CO2 Concentration'\n      }\n    }\n  };\n  return data && /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 18\n  }, this);\n  // <img className={styles.image1Icon} alt=\"\" src=\"https://github.com/NavSous/Software-Studio-Project/blob/data/images/co2_30.png?raw=true\" />;\n\n  // <div> asdfkajsdlkfjalksjdfkljasdf </div>\n  // return (data != null)? <div> hii </div> : <div> no data </div>\n};\n_s(ImagePlot, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = ImagePlot;\nexport default ImagePlot;\nvar _c;\n$RefreshReg$(_c, \"ImagePlot\");","map":{"version":3,"names":["styles","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","ImagePlot","data","setData","fetch","then","response","text","datapoints","split","slice","map","point","parseFloat","console","log","labels","Array","length","keys","day","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","datasets","label","catch","err","error","options","responsive","plugins","legend","display","title"],"sources":["/Users/annzhu/Documents/Software Studio/EnvironmentData/src/components/ImagePlot.js"],"sourcesContent":["import styles from \"./ImagePlot.module.css\";\nimport { useEffect, useState } from \"react\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n\nconst ImagePlot = () => {\n  const [data, setData] = useState(null)\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/NavSous/Software-Studio-Project/data/co2.csv')\n      .then(response => response.text())\n      .then(data => {\n\n        let datapoints = data.split(\"\\n\").slice(1, -1).map(point => {\n          return parseFloat(point.split(\",\")[1])\n          // let parsed = point.split(\",\").map(y => {\n          //   return parseFloat(y);\n          // });\n        })\n        console.log(datapoints)\n        setData({\n            // labels: Array.from(datapoints.length).map(i => i),\n            labels: [...Array(datapoints.length).keys()].map(day => {\n              var date = new Date();\n              var dd = String(date.getDate()).padStart(2, '0');\n              var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n              var yyyy = date.getFullYear();\n              date = mm + '/' + dd + '/' + yyyy;\n              return day\n            }),\n            datasets: [{\n            label: \"\",\n            data: datapoints,\n            }]\n        })\n\n      })\n      .catch(err => console.error(err));\n  },[])\n\n\n  const options = {\n    responsive: true,\n    // layout: {\n    //   padding: {\n    //     top: 400,\n    //     bottom: 0,\n    //     left: 200,\n    //     right: 200\n    //   }\n    // },\n    plugins: {\n      legend: {\n        // position: 'top',\n        display: false, \n      },\n      title: {\n        display: true,\n        text: 'Bay Meadows Daily CO2 Concentration',\n      }\n    },\n  };\n\n\n  return data && <Line options={options} data={data} /> \n  // <img className={styles.image1Icon} alt=\"\" src=\"https://github.com/NavSous/Software-Studio-Project/blob/data/images/co2_30.png?raw=true\" />;\n\n  // <div> asdfkajsdlkfjalksjdfkljasdf </div>\n  // return (data != null)? <div> hii </div> : <div> no data </div>\n  \n  \n};\n\nexport default ImagePlot;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC;AAEvCR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AAGD,MAAMG,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtCD,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,gFAAgF,CAAC,CACpFC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACH,IAAI,IAAI;MAEZ,IAAIM,UAAU,GAAGN,IAAI,CAACO,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,KAAK,IAAI;QAC1D,OAAOC,UAAU,CAACD,KAAK,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC;QACA;QACA;MACF,CAAC,CAAC;;MACFK,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;MACvBL,OAAO,CAAC;QACJ;QACAa,MAAM,EAAE,CAAC,GAAGC,KAAK,CAACT,UAAU,CAACU,MAAM,CAAC,CAACC,IAAI,EAAE,CAAC,CAACR,GAAG,CAACS,GAAG,IAAI;UACtD,IAAIC,IAAI,GAAG,IAAIC,IAAI,EAAE;UACrB,IAAIC,EAAE,GAAGC,MAAM,CAACH,IAAI,CAACI,OAAO,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;UAChD,IAAIC,EAAE,GAAGH,MAAM,CAACH,IAAI,CAACO,QAAQ,EAAE,GAAG,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;UACvD,IAAIG,IAAI,GAAGR,IAAI,CAACS,WAAW,EAAE;UAC7BT,IAAI,GAAGM,EAAE,GAAG,GAAG,GAAGJ,EAAE,GAAG,GAAG,GAAGM,IAAI;UACjC,OAAOT,GAAG;QACZ,CAAC,CAAC;QACFW,QAAQ,EAAE,CAAC;UACXC,KAAK,EAAE,EAAE;UACT9B,IAAI,EAAEM;QACN,CAAC;MACL,CAAC,CAAC;IAEJ,CAAC,CAAC,CACDyB,KAAK,CAACC,GAAG,IAAIpB,OAAO,CAACqB,KAAK,CAACD,GAAG,CAAC,CAAC;EACrC,CAAC,EAAC,EAAE,CAAC;EAGL,MAAME,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,OAAO,EAAE;MACPC,MAAM,EAAE;QACN;QACAC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACLD,OAAO,EAAE,IAAI;QACbjC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAGD,OAAOL,IAAI,iBAAI,QAAC,IAAI;IAAC,OAAO,EAAEkC,OAAQ;IAAC,IAAI,EAAElC;EAAK;IAAA;IAAA;IAAA;EAAA,QAAG;EACrD;;EAEA;EACA;AAGF,CAAC;AAAC,GAjEID,SAAS;AAAA,KAATA,SAAS;AAmEf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}